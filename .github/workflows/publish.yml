name: Build, Tag, and Publish Vue Library

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Manually specify next release version (leave empty for auto)"
        required: false
        default: ""
  push:
    branches:
      - main

jobs:
  tag-and-release:
    name: Tag & Build & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
      latest_tag: ${{ steps.bump_version.outputs.latest_tag }}

    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ♻️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn
          registry-url: 'https://registry.npmjs.org/'

      - name: 📜 Install dependencies
        run: yarn install --frozen-lockfile

      - name: ➕ Bump version from latest tag or input
        id: bump_version
        run: |
          input_version="${{ github.event.inputs.release_version }}"

          if [ -z "$input_version" ]; then
            latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            echo "Latest tag: $latest_tag"

            version=$(echo $latest_tag | sed 's/^v//' | awk -F. '{ $3 += 1; print $1 "." $2 "." $3 }')
            new_tag="v$version"
          else
            version="$input_version"
            new_tag="v$version"
          fi

          echo "New tag: $new_tag"

          # Update package.json version
          jq --arg v "$version" '.version = $v' package.json > package.tmp.json
          mv package.tmp.json package.json

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add package.json
          git commit -m "chore: bump version to $new_tag"

          # Avoid error if tag already exists
          if git ls-remote --tags origin | grep -q "refs/tags/$new_tag$"; then
            echo "⚠️ Tag $new_tag already exists. Skipping tag creation."
          else
            git tag $new_tag
            git push origin HEAD:main --tags
          fi

          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: 🏠 Build the library
        run: yarn build:lib

      - name: 📦 Publish to npm Registry
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📄 Upload built .tgz to GitHub Release
        run: |
          npm pack --pack-destination .
        shell: bash

      - name: 📤 Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          files: '*.tgz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
